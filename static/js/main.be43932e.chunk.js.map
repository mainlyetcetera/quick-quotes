{"version":3,"sources":["components/Header/Header.js","components/Message/Message.js","utils/api.js","utils/capitalize.js","components/Selector/Selector.js","components/Details/Details.js","components/Favorites/Favorites.js","components/Error/Error.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["Header","className","to","Message","quote","favoriteQuote","onClick","fetchData","url","a","fetch","res","ok","json","data","capitalize","word","toUpperCase","slice","length","Selector","chooseCategory","generateQuote","useState","categories","setCategories","buttonDisabled","setButtonDisabled","useEffect","generateCategories","onChange","e","target","value","handleChange","map","category","name","quoteCount","_id","preventDefault","handleClick","disabled","Details","info","content","author","tags","Favorites","favorites","removeQuote","key","toDisplay","favorite","Error","status","text","Footer","App","setCategory","setInfo","setQuote","err","setErr","setFavorites","choice","statusText","hasQuote","find","alert","removed","filter","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.be43932e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Header.css'\n\nconst Header = () => (\n  <header>\n    <h1>QuickQuotes</h1>\n    <h2>Welcome!</h2>\n    <Link className='navigation' to='/favorites'>To Favorites</Link>\n    <Link className='navigation' to='/'>To Home</Link>\n  </header>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport './Message.css'\n\nconst Message = ({quote, favoriteQuote}) => {\n  return (\n    <div>\n      {!quote && <h3>Something clever will go here soon...</h3>}\n      {quote && \n        <section>\n          <h3>{quote}</h3>\n          <Link\n            className='details-btn'\n            to='/details'\n          >\n          Get Details Here!\n          </Link>\n          <button\n            onClick={() => favoriteQuote()}\n          >\n          Favorite this!\n          </button>\n        </section>\n      }\n    </div>\n  )\n}\n\nexport default Message\n\nMessage.propTypes = {\n  quote: PropTypes.string,\n  favoriteQuote: PropTypes.func\n}\n","const fetchData = async url => {\n  const res = await fetch(url)\n  if (!res.ok) {\n    throw res\n  }\n\n  const data = await res.json()\n  return data\n}\n\nexport { fetchData }\n","const capitalize = word => word[0].toUpperCase() + word.slice(1, word.length)\n\nexport default capitalize\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport './Selector.css'\nimport { fetchData } from '../../utils/api.js'\nimport capitalize from '../../utils/capitalize.js'\n\nconst Selector = ({chooseCategory, generateQuote}) => {\n  const [categories, setCategories] = useState([])\n  const [buttonDisabled, setButtonDisabled] = useState(true)\n\n  useEffect(() => {\n    const generateCategories = async () => {\n      const url = 'https://api.quotable.io/tags'\n      const data = await fetchData(url)\n      setCategories(data)\n    }\n\n    generateCategories()\n  }, [])\n\n  const displayCategories = () => (\n    categories.map(category => {\n      const {name, quoteCount, _id} = category\n      return quoteCount ? (\n        <option \n          value={name}\n          key={_id}\n        >\n        {capitalize(name)}\n        </option>\n      ) : null\n    })\n  )\n\n  const handleChange = e => {\n    chooseCategory(e.target.value)\n    e.target.value !== '' ? setButtonDisabled(false) : setButtonDisabled(true)\n  }\n\n  const handleClick = e => {\n    e.preventDefault()\n    generateQuote()\n  }\n\n  return (\n    <div>\n      <form>\n        <select\n          onChange={e => handleChange(e)}\n        >\n          <option value=''>\n            Please pick a category\n          </option>\n          {displayCategories()}\n        </select>\n        <button\n          className='select-btn'\n          onClick={e => handleClick(e)}\n          disabled={buttonDisabled}\n        >\n        Get quote!\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default Selector\n\nSelector.propTypes = {\n  chooseCategory: PropTypes.func,\n  generateQuote: PropTypes.func\n} \n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport './Details.css'\n\nconst Details = ({info, favoriteQuote}) => {\n  const {content, author, tags} = info\n  return (\n    <section>\n      <article>Quote: {content}</article>\n      <article>Author: {author}</article>\n      <article>Categories: {tags}</article>\n      <Link to='/'>Return</Link>\n      <button \n        onClick={() => favoriteQuote()}\n      >\n      Favorite this!\n      </button>\n    </section>\n  )\n}\n\nexport default Details\n\nDetails.propTypes = {\n  info: PropTypes.object,\n  favoriteQuote: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Favorites.css'\n\nconst Favorites = ({favorites, removeQuote}) => {\n  let key = 0\n  const toDisplay = favorites.map(favorite => {\n    const {content, author, tags} = favorite\n    key += 1\n    return (\n      <section \n        className='favorite'\n        key={key}\n      >\n        <article>Quote: {content}</article>\n        <article>Author: {author}</article>\n        <article>Categories: {tags}</article>\n        <button\n          className='remove-button'\n          onClick={e => removeQuote(content)}\n        >\n        Remove from Favorites\n        </button>\n      </section>\n    )\n  })\n\n  return <section>{toDisplay}</section>\n}\n\nexport default Favorites\n\nFavorites.propTypes = {\n  favorites: PropTypes.array,\n  removeQuote: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Error = ({status, text}) => (\n  <section>\n    <article>Sorry!</article>\n    <article>Something went wrong!</article>\n    <article>{status}</article>\n    <article>{text}</article>\n  </section>\n)\n\nexport default Error\n\nError.propTypes = { \n  status: PropTypes.number,\n  text: PropTypes.string\n}\n","import React from 'react'\nimport './Footer.css'\n\nconst Footer = () => (\n  <footer>\n    <p>quotes in tab by iconsmind.com from the Noun Project</p>\n  </footer>\n)\n\nexport default Footer\n","import React, { useState } from 'react'\nimport Header from '../Header/Header.js'\nimport Message from '../Message/Message.js'\nimport Selector from '../Selector/Selector.js'\nimport Details from '../Details/Details.js'\nimport Favorites from '../Favorites/Favorites.js'\nimport Error from '../Error/Error.js'\nimport Footer from '../Footer/Footer.js'\nimport { Route } from 'react-router-dom'\nimport { fetchData } from '../../utils/api.js'\nimport './App.css'\n\nconst App = () => {\n  const [category, setCategory] = useState(null)\n  const [info, setInfo] = useState({\n    tags: [],\n    content: '',\n    author: ''\n  })\n  const [quote, setQuote] = useState(null)\n  const [err, setErr] = useState(null)\n  const [favorites, setFavorites] = useState([])\n\n  const chooseCategory = choice => {\n    setCategory(choice)\n  }\n\n  const generateQuote = async () => {\n    try {\n      const url = `https://api.quotable.io/random?tags=${category}`\n      const data = await fetchData(url)\n      setInfo({\n        tags: data.tags,\n        content: data.content,\n        author: data.author\n      })\n      setQuote(data.content)\n    } catch (err) {\n      setErr({\n        status: err.status,\n        text: err.statusText\n      })\n    }\n  }\n\n  const favoriteQuote = () => {\n    const hasQuote = favorites.find(\n      favorite => favorite.content === info.content\n    )\n      \n    !hasQuote && setFavorites([...favorites, info])\n    !hasQuote && alert('success!')\n  }\n\n  const removeQuote = content => {\n    const removed = favorites.filter(favorite => favorite.content !== content)\n    setFavorites(removed)\n  }\n\n  return (\n    <main>\n      <Header />\n      <Route\n        exact path='/details'\n        render={() => {\n          return (\n            <div>\n              <Details \n                info={info}\n                favoriteQuote={favoriteQuote}\n              />\n              <Footer />\n            </div>\n          )\n        }}\n      />\n      <Route\n        exact path='/favorites'\n        render={() => {\n          return (\n            <>\n              <Favorites \n                favorites={favorites}\n                removeQuote={removeQuote}\n              />\n              <Footer />\n            </>\n          )\n        }}\n      />\n      <Route\n        exact path='/'\n        render={() => {\n          return !err ? (\n            <div>\n              <Selector \n                chooseCategory={chooseCategory}\n                generateQuote={generateQuote}\n              />\n              <Message \n                quote={quote}\n                favoriteQuote={favoriteQuote}\n              />\n              <Footer />\n            </div>\n          ) : (\n            <>\n              <Error status={err.status} text={err.text}/>\n              <Footer />\n            </>\n          )\n        }}\n      />\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './components/App/App.js';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}